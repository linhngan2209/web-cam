{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ADMIN/camera-web/src/contexts/AuthenticationContext.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AuthProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call AuthProvider() from the server but AuthProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/contexts/AuthenticationContext.tsx <module evaluation>\",\n    \"AuthProvider\",\n);\nexport const useAuth = registerClientReference(\n    function() { throw new Error(\"Attempted to call useAuth() from the server but useAuth is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/contexts/AuthenticationContext.tsx <module evaluation>\",\n    \"useAuth\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,wEACA;AAEG,MAAM,UAAU,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,wEACA"}},
    {"offset": {"line": 19, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ADMIN/camera-web/src/contexts/AuthenticationContext.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AuthProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call AuthProvider() from the server but AuthProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/contexts/AuthenticationContext.tsx\",\n    \"AuthProvider\",\n);\nexport const useAuth = registerClientReference(\n    function() { throw new Error(\"Attempted to call useAuth() from the server but useAuth is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/contexts/AuthenticationContext.tsx\",\n    \"useAuth\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,oDACA;AAEG,MAAM,UAAU,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,oDACA"}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ADMIN/camera-web/src/components/Loading.tsx"],"sourcesContent":["const Loading = () => {\r\n  return (\r\n    <div className=\"fixed inset-0 flex items-center justify-center bg-white bg-opacity-80\">\r\n      <div className=\"flex flex-col items-center\">\r\n        <div className=\"w-12 h-12 border-4 border-indigo-300 border-t-4 border-t-indigo-600 rounded-full animate-spin\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;"],"names":[],"mappings":";;;;;AAAA,MAAM,UAAU;IACd,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;;;;;;;;;;;;;;;AAIvB;uCAEe"}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 168, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ADMIN/camera-web/src/services/apiClient.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: 'http://localhost:8000', \r\n  timeout: 20000, \r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  \r\n  },\r\n});\r\n\r\n// Interceptor cho request\r\naxiosInstance.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token'); \r\n    if (token) {\r\n      config.headers['Authorization'] = `Bearer ${token}`; \r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Interceptor cho response\r\naxiosInstance.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    // if (error.response) {\r\n    //   if (error.response.status === 4) {\r\n    //     localStorage.removeItem('token');\r\n    //     window.location.href = '/login'; \r\n    //   }\r\n    // }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance;\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,gBAAgB,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACjC,SAAS;IACT,SAAS;IACT,SAAS;QACP,gBAAgB;IAElB;AACF;AAEA,0BAA0B;AAC1B,cAAc,YAAY,CAAC,OAAO,CAAC,GAAG,CACpC,CAAC;IACC,MAAM,QAAQ,aAAa,OAAO,CAAC;IACnC,IAAI,OAAO;QACT,OAAO,OAAO,CAAC,gBAAgB,GAAG,CAAC,OAAO,EAAE,OAAO;IACrD;IACA,OAAO;AACT,GACA,CAAC;IACC,OAAO,QAAQ,MAAM,CAAC;AACxB;AAGF,2BAA2B;AAC3B,cAAc,YAAY,CAAC,QAAQ,CAAC,GAAG,CACrC,CAAC;IACC,OAAO;AACT,GACA,CAAC;IACC,wBAAwB;IACxB,uCAAuC;IACvC,wCAAwC;IACxC,wCAAwC;IACxC,MAAM;IACN,IAAI;IACJ,OAAO,QAAQ,MAAM,CAAC;AACxB;uCAGa"}},
    {"offset": {"line": 203, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 209, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ADMIN/camera-web/src/hooks/useHardwareQuery.ts"],"sourcesContent":["import { useQuery, useQueryClient } from '@tanstack/react-query';\r\nimport { useAuth } from '@/contexts/AuthenticationContext';\r\nimport axiosInstance from '@/services/apiClient';\r\n\r\ninterface Hardware {\r\n    id: string;\r\n}\r\n\r\nconst fetchHardwares = async (): Promise<Hardware[]> => {\r\n    const response = await axiosInstance.get('/api/user/get-user-hardware', {\r\n        params: { limit: 10, page: 1 },\r\n        timeout: 10000,\r\n    });\r\n    return response.data.data || [];\r\n};\r\n\r\nexport const useHardwareQuery = (shouldRedirect = false) => {\r\n    const { isLoggedIn } = useAuth();\r\n    const queryClient = useQueryClient();\r\n\r\n    const query = useQuery({\r\n        queryKey: ['hardwares'],\r\n        queryFn: fetchHardwares,\r\n        enabled: !!isLoggedIn, \r\n    });\r\n\r\n    const refreshHardwares = () => {\r\n        queryClient.invalidateQueries({ queryKey: ['hardwares'] });\r\n    };\r\n\r\n    return {\r\n        ...query,\r\n        hardwares: query.data || [],\r\n        refreshHardwares,\r\n    };\r\n};\r\n"],"names":[],"mappings":";;;AACA;AACA;AAFA;AAAA;;;;AAQA,MAAM,iBAAiB;IACnB,MAAM,WAAW,MAAM,4HAAA,CAAA,UAAa,CAAC,GAAG,CAAC,+BAA+B;QACpE,QAAQ;YAAE,OAAO;YAAI,MAAM;QAAE;QAC7B,SAAS;IACb;IACA,OAAO,SAAS,IAAI,CAAC,IAAI,IAAI,EAAE;AACnC;AAEO,MAAM,mBAAmB,CAAC,iBAAiB,KAAK;IACnD,MAAM,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,yIAAA,CAAA,UAAO,AAAD;IAC7B,MAAM,cAAc,CAAA,GAAA,sLAAA,CAAA,iBAAc,AAAD;IAEjC,MAAM,QAAQ,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD,EAAE;QACnB,UAAU;YAAC;SAAY;QACvB,SAAS;QACT,SAAS,CAAC,CAAC;IACf;IAEA,MAAM,mBAAmB;QACrB,YAAY,iBAAiB,CAAC;YAAE,UAAU;gBAAC;aAAY;QAAC;IAC5D;IAEA,OAAO;QACH,GAAG,KAAK;QACR,WAAW,MAAM,IAAI,IAAI,EAAE;QAC3B;IACJ;AACJ"}},
    {"offset": {"line": 252, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 258, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ADMIN/camera-web/src/app/login/page.tsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\nimport { FaEye, FaEyeSlash } from 'react-icons/fa';\r\nimport { useAuth } from '@/contexts/AuthenticationContext';\r\nimport Loading from '@/components/Loading';\r\nimport { useHardwareQuery } from '@/hooks/useHardwareQuery'; // Import useHardwareQuery\r\n\r\ninterface UserCredentials {\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\ninterface PasswordInputProps {\r\n    password: string;\r\n    setPassword: (password: string) => void;\r\n    passwordVisible: boolean;\r\n    togglePasswordVisibility: () => void;\r\n}\r\n\r\nconst PasswordInput: React.FC<PasswordInputProps> = ({\r\n    password,\r\n    setPassword,\r\n    passwordVisible,\r\n    togglePasswordVisibility\r\n}) => (\r\n    <div className=\"relative\">\r\n        <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">Password</label>\r\n        <input\r\n            type={passwordVisible ? 'text' : 'password'}\r\n            id=\"password\"\r\n            placeholder=\"Enter your password\"\r\n            className=\"w-full px-4 py-2 mt-2 text-lg border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500 text-black focus:text-black\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n        />\r\n        {password && (\r\n            <button\r\n                type=\"button\"\r\n                onClick={togglePasswordVisibility}\r\n                className=\"absolute right-4 bottom-1 transform -translate-y-1/2 text-gray-600\"\r\n                aria-label=\"Toggle password visibility\"\r\n            >\r\n                {passwordVisible ? <FaEyeSlash /> : <FaEye />}\r\n            </button>\r\n        )}\r\n    </div>\r\n);\r\n\r\nconst Login: React.FC = () => {\r\n    const [email, setEmail] = useState<string>('');\r\n    const [password, setPassword] = useState<string>('');\r\n    const [error, setError] = useState<string>('');\r\n    const [passwordVisible, setPasswordVisible] = useState<boolean>(false);\r\n    const [isLoading, setIsLoading] = useState<boolean>(false);\r\n    const router = useRouter();\r\n    const { login } = useAuth();\r\n\r\n    // Sử dụng useHardwareQuery với chuyển hướng\r\n    const { hardwares, isLoading: isHardwareLoading } = useHardwareQuery(true);\r\n\r\n    const isFormValid = email.includes('@') && password.length >= 6;\r\n\r\n    const togglePasswordVisibility = useCallback((): void => {\r\n        setPasswordVisible(prev => !prev);\r\n    }, []);\r\n\r\n    const handleLogin = useCallback(async (e: React.FormEvent): Promise<void> => {\r\n        e.preventDefault();\r\n\r\n        if (!isFormValid) {\r\n            setError('Please enter a valid email and password (min 6 characters)');\r\n            return;\r\n        }\r\n\r\n        setIsLoading(true);\r\n        setError('');\r\n\r\n        try {\r\n            const user: UserCredentials = { email, password };\r\n            const userLogin = { ...user, remember: true };\r\n            const loginError = await login(userLogin);\r\n\r\n            if (loginError) {\r\n                setError(loginError);\r\n            }\r\n        } catch (err: any) {\r\n            console.error('Login error:', err);\r\n            setError(err.message || 'Login failed. Please try again.');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    }, [email, password, isFormValid, login]);\r\n\r\n    return (\r\n        <div className=\"flex justify-center items-center min-h-screen bg-[rgb(243,244,246)]\">\r\n            <div className={`flex flex-col lg:flex-row w-full max-w-4xl bg-white rounded-xl shadow-2xl overflow-hidden ${isLoading ? 'opacity-50' : ''}`}>\r\n                <div className=\"w-full lg:w-1/2 p-8 flex flex-col justify-center items-center\">\r\n                    <img\r\n                        src=\"/logo.png\"\r\n                        alt=\"Logo\"\r\n                        className=\"mb-6 max-w-[350px] lg:max-w-[400px]\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"w-full lg:w-1/2 p-8\">\r\n                    <h2 className=\"text-3xl font-semibold text-gray-800 mb-6 text-center\">Login</h2>\r\n                    <form onSubmit={handleLogin} className=\"space-y-4\">\r\n                        <div>\r\n                            <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">Email</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                id=\"email\"\r\n                                placeholder=\"Enter your email\"\r\n                                className=\"w-full px-4 py-2 mt-2 text-lg border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500 text-black focus:text-black\"\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                                required\r\n                            />\r\n                        </div>\r\n\r\n                        <PasswordInput\r\n                            password={password}\r\n                            setPassword={setPassword}\r\n                            passwordVisible={passwordVisible}\r\n                            togglePasswordVisibility={togglePasswordVisibility}\r\n                        />\r\n\r\n                        {error && <p className=\"text-red-500 text-sm mt-2\">{error}</p>}\r\n\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"w-full py-3 mt-6 bg-indigo-600 text-white font-semibold rounded-lg shadow-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 flex justify-center items-center\"\r\n                            disabled={isLoading}\r\n                        >\r\n                            {isLoading ? (\r\n                                <>\r\n                                    <span className=\"mr-2\">Logging in</span>\r\n                                    <div className=\"h-4 w-4 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\r\n                                </>\r\n                            ) : 'Login'}\r\n                        </button>\r\n                    </form>\r\n\r\n                    <div className=\"text-center text-sm text-gray-600 mt-4\">\r\n                        <a href=\"/forgot-password\" className=\"text-indigo-600 hover:text-indigo-700\">Forgot password?</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {isLoading && (\r\n                <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n                    <Loading />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 540, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 551, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 551, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}