{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/services/apiClient.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: 'http://localhost:8000', \r\n  timeout: 20000, \r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  \r\n  },\r\n});\r\n\r\n// Interceptor cho request\r\naxiosInstance.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token'); \r\n    if (token) {\r\n      config.headers['Authorization'] = `Bearer ${token}`; \r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Interceptor cho response\r\naxiosInstance.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    // if (error.response) {\r\n    //   if (error.response.status === 4) {\r\n    //     localStorage.removeItem('token');\r\n    //     window.location.href = '/login'; \r\n    //   }\r\n    // }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance;\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,gBAAgB,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACjC,SAAS;IACT,SAAS;IACT,SAAS;QACP,gBAAgB;IAElB;AACF;AAEA,0BAA0B;AAC1B,cAAc,YAAY,CAAC,OAAO,CAAC,GAAG,CACpC,CAAC;IACC,MAAM,QAAQ,aAAa,OAAO,CAAC;IACnC,IAAI,OAAO;QACT,OAAO,OAAO,CAAC,gBAAgB,GAAG,CAAC,OAAO,EAAE,OAAO;IACrD;IACA,OAAO;AACT,GACA,CAAC;IACC,OAAO,QAAQ,MAAM,CAAC;AACxB;AAGF,2BAA2B;AAC3B,cAAc,YAAY,CAAC,QAAQ,CAAC,GAAG,CACrC,CAAC;IACC,OAAO;AACT,GACA,CAAC;IACC,wBAAwB;IACxB,uCAAuC;IACvC,wCAAwC;IACxC,wCAAwC;IACxC,MAAM;IACN,IAAI;IACJ,OAAO,QAAQ,MAAM,CAAC;AACxB;uCAGa"}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 64, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/middleware.ts"],"sourcesContent":["// middleware.ts\r\nimport axios from 'axios';\r\nimport { NextResponse } from 'next/server'\r\nimport type { NextRequest } from 'next/server'\r\nimport axiosInstance from './services/apiClient';\r\n\r\nexport default async function middleware(request: NextRequest) {\r\n  const protectedRoutes = ['/authenticated']\r\n  console.log('Request:', request)\r\n  const isProtectedRoute = protectedRoutes.some(route => \r\n    request.nextUrl.pathname.startsWith(route)\r\n  )\r\n\r\n  // Nếu là route được bảo vệ\r\n  if (isProtectedRoute) {\r\n    try {\r\n      // Gọi API check token của bạn bằng axios\r\n      const response = await axiosInstance.get('/api/auth/check-token')\r\n        console.log('Response:', response)\r\n      if (response.status !== 200) {\r\n        return NextResponse.redirect(new URL('/login', request.url))\r\n      }\r\n    } catch (error) {\r\n      // Nếu có lỗi kết nối\r\n      return NextResponse.redirect(new URL('/login', request.url))\r\n    }\r\n  }\r\n\r\n  return NextResponse.next()\r\n}\r\n\r\nexport const config = {\r\n  matcher: ['/authenticated/:path*']\r\n}"],"names":[],"mappings":"AAAA,gBAAgB;;;;;AAEhB;AAEA;AAFA;;;AAIe,eAAe,WAAW,OAAoB;IAC3D,MAAM,kBAAkB;QAAC;KAAiB;IAC1C,QAAQ,GAAG,CAAC,YAAY;IACxB,MAAM,mBAAmB,gBAAgB,IAAI,CAAC,CAAA,QAC5C,QAAQ,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC;IAGtC,2BAA2B;IAC3B,IAAI,kBAAkB;QACpB,IAAI;YACF,yCAAyC;YACzC,MAAM,WAAW,MAAM,4HAAA,CAAA,UAAa,CAAC,GAAG,CAAC;YACvC,QAAQ,GAAG,CAAC,aAAa;YAC3B,IAAI,SAAS,MAAM,KAAK,KAAK;gBAC3B,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,QAAQ,GAAG;YAC5D;QACF,EAAE,OAAO,OAAO;YACd,qBAAqB;YACrB,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,QAAQ,GAAG;QAC5D;IACF;IAEA,OAAO,qLAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAEO,MAAM,SAAS;IACpB,SAAS;QAAC;KAAwB;AACpC"}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}